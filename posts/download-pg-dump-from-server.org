#+TITLE: How to download a PostgreSQL dump from server
#+DATE: <2020-10-14 Wed>

** Situation

Assume you have access to a remote server that has access to a PostgreSQL
server, but when connecting you get loaded straight into a =psql= session.

Now you want to download a database dump from that server, of testing or back up
purposes.

** Breaking out psql

You cannot create a PostgreSQL dump from =psql=, you'll need to use =pg_dump=
instead. To start a shell prompt, you can type =\!=. This will give you shell,
as if you've never ended up in =psql= in the first place.

** Creating the dump

I suggest to create a gzipped dump, because it will be faster to download it. To
create that, run:

#+begin_src shell
pg_dump -Z <dbname> > dump.sql.gz
#+end_src

(obviously you'll need to replace =<dbname>= with the actual name of the
database you want a dump of)

** Open SSH tunnel back to local machine

Here it gets tricky. I got this [[https://askubuntu.com/a/13425][from AskUbuntu]] but I struggled with it, so I'll
be a bit more wordy.

In you existing SSH session (which is a shell prompt now):

- Press ~ENTER~ to start with a clean line
- Press ~~~ and ~SHIFT+C~
- Your prompt will change to =ssh>=, type here ~-R 22042:localhost:22~
- It will say =Forwarding port.=
- Press ~ENTER~ again to go back to the prompt

The sequence in the first two steps is weird, but you can read more about the
[[http://manpages.ubuntu.com/manpages/focal/en/man1/ssh.1.html#escape%20characters][SSH escape characters]] in the man page.

*Important note:* This guide assumes you have an SSH server running on your
 local machine. If not, make sure it's installed and start it with:

#+begin_src shell
sudo systemctl start sshd
#+end_src

** Download the dump

Now we have the tunnel set up, run the following command again in the same
prompt:

#+begin_src shell
scp -P 22042 dump.sql.gz localhost:
#+end_src

Now you'll find the dump in the =$HOME= of you're local machine.
